{
    "openapi": "3.0.0",
    "info": {
        "title": "E-garage Api",
        "version": "0.0.1"
    },
    "servers": [
        {
            "url": "https://backend.egarage.store",
            "description": "Dev server online"
        },
        {
            "url": "http://localhost",
            "description": "Dev server offline"
        }
    ],
    "paths": {
        "/api/v1/cars/add": {
            "post": {
                "tags": [
                    "Car Management"
                ],
                "summary": "Add car.",
                "parameters": [
                    {
                        "parameter": "user_credentials_in_query_required",
                        "name": "body",
                        "in": "query",
                        "description": "Acceptable extensions for thumbnail: png, jpg, jpeg.",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Car"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Success"
                    }
                }
            }
        },
        "/api/v1/cars/status/{car_id}": {
            "post": {
                "tags": [
                    "Car Management"
                ],
                "summary": "Change availability status of car's.",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CarStatusUpdate"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/cars": {
            "get": {
                "tags": [
                    "Car Management"
                ],
                "summary": "Get all cars that logged user own.",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CarCollection"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/cars/update/{car_id}": {
            "put": {
                "tags": [
                    "Car Management"
                ],
                "summary": "Update car's info or thumbnail.",
                "parameters": [
                    {
                        "parameter": "user_credentials_in_query_required",
                        "name": "body",
                        "in": "query",
                        "description": "Acceptable extensions for thumbnail: png, jpg, jpeg.",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/CarUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                }
            }
        },
        "/api/v1/cars/update/details/{car_id}": {
            "put": {
                "tags": [
                    "Car Management"
                ],
                "summary": "Update car's details.",
                "parameters": [
                    {
                        "parameter": "user_credentials_in_query_required",
                        "name": "body",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/CarDetailsUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                }
            }
        },
        "/api/v1/cars/delete/{car_id}": {
            "delete": {
                "tags": [
                    "Car Management"
                ],
                "summary": "Delete car.",
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                }
            }
        },
        "/docs/v1": {
            "get": {
                "tags": [
                    "documentation"
                ],
                "summary": "E-garage api",
                "responses": {
                    "200": {
                        "description": "success"
                    }
                }
            }
        },
        "/api/v1/last-parked-location/set": {
            "post": {
                "tags": [
                    "Last parked location management"
                ],
                "summary": "Set coordinates.",
                "parameters": [
                    {
                        "parameter": "user_credentials_in_query_required",
                        "name": "body",
                        "in": "query",
                        "description": "Coordinates of last parked location.",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Coordinates"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                }
            }
        },
        "/api/v1/last-parked-location/": {
            "get": {
                "tags": [
                    "Last parked location management"
                ],
                "summary": "Get coordinates.",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Coordinates"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/last-parked-location/delete": {
            "delete": {
                "tags": [
                    "Last parked location management"
                ],
                "summary": "Delete coordinates.",
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                }
            }
        },
        "/api/v1/account/update/password": {
            "put": {
                "tags": [
                    "Account Management"
                ],
                "summary": "Update user's account password",
                "parameters": [
                    {
                        "parameter": "user_credentials_in_query_required",
                        "name": "body",
                        "in": "query",
                        "description": "Data needed to perform action.",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/UpdatePassword"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdatePassword"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                }
            }
        },
        "/api/v1/account/update/name": {
            "put": {
                "tags": [
                    "Account Management"
                ],
                "summary": "Update user's account name",
                "parameters": [
                    {
                        "parameter": "user_credentials_in_query_required",
                        "name": "body",
                        "in": "query",
                        "description": "Data needed to perform action.",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/UpdateName"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateName"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                }
            }
        },
        "/api/v1/account/update/email": {
            "put": {
                "tags": [
                    "Account Management"
                ],
                "summary": "Update user's account email",
                "parameters": [
                    {
                        "parameter": "user_credentials_in_query_required",
                        "name": "body",
                        "in": "query",
                        "description": "Data needed to perform action.",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/UpdateEmail"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateEmail"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/account/avatar/upload": {
            "post": {
                "tags": [
                    "Avatar Management"
                ],
                "summary": "Upload user's avatar",
                "parameters": [
                    {
                        "parameter": "user_credentials_in_query_required",
                        "name": "body",
                        "in": "query",
                        "description": "Avatar needed to perform action. Acceptable extensions: png, jpg, jpeg.",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Avatar"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Success"
                    }
                }
            }
        },
        "/api/v1/account/avatar": {
            "get": {
                "tags": [
                    "Avatar Management"
                ],
                "summary": "Get user's avatar",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "image": {
                                "schema": {
                                    "$ref": "#/components/schemas/RetrievedAvatar"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/account/avatar/delete": {
            "delete": {
                "tags": [
                    "Avatar Management"
                ],
                "summary": "Delete user's avatar",
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                }
            }
        },
        "/api/v1/auth/login": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Operates about user",
                "operationId": "f4347aab4a8989ce73fc533505b58e23",
                "parameters": [
                    {
                        "parameter": "user_credentials_in_query_required",
                        "name": "body",
                        "in": "query",
                        "description": "User object that needs to be log in.",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Login"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Login"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Loged in",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "email": {
                                            "type": "string"
                                        },
                                        "accessToken": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "example": {
                                    "email": "cool@email.com",
                                    "accessToken": "tokenNr1",
                                    "tokenType": "Bearer"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User Not Found"
                    },
                    "401": {
                        "description": "User Credential Invalid"
                    }
                }
            }
        },
        "/api/v1/auth/logout": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Operates about user",
                "operationId": "4eee631b5540cc3b74d925dbe348f1fc",
                "parameters": [
                    {
                        "parameter": "user_accessToken",
                        "name": "authorization",
                        "in": "header",
                        "description": "accessToken to log out",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Logout"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Logged out",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "example": {
                                    "message": "loged out"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/api/v1/auth/signup": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Operates about user",
                "operationId": "1d6e8dd4740d98dd9a11a5f5addf5c72",
                "parameters": [
                    {
                        "parameter": "user_credentials_in_query_required",
                        "name": "body",
                        "in": "query",
                        "description": "User object that needs to be added to the database.",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Register"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Register"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Register"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/reset-password/send-link": {
            "put": {
                "tags": [
                    "Reset Password"
                ],
                "summary": "Send link to user's mail via mail.",
                "parameters": [
                    {
                        "parameter": "user_credentials_in_query_required",
                        "name": "body",
                        "in": "query",
                        "description": "Email to which the link should be sent.",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/SendResetPasswordLink"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SendResetPasswordLink"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/reset-password/": {
            "put": {
                "tags": [
                    "Reset Password"
                ],
                "summary": "Resets password.",
                "parameters": [
                    {
                        "parameter": "user_credentials_in_query_required",
                        "name": "body",
                        "in": "query",
                        "description": "User's email, unique token and new password.",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/ResetPassword"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ResetPassword"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Car": {
                "properties": {
                    "brand": {
                        "type": "string|required"
                    },
                    "description": {
                        "type": "string"
                    },
                    "thumbnail": {
                        "type": "file"
                    }
                },
                "type": "object",
                "example": {
                    "brand": "BMW X12",
                    "description": "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Aliquam tempora aperiam sint sequi.",
                    "thumbnail": "file"
                }
            },
            "CarCollection": {
                "properties": {
                    "cars": {
                        "type": "list"
                    }
                },
                "type": "object",
                "example": [
                    {
                        "brand": "BMW X12",
                        "description": "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Aliquam tempora aperiam sint sequi.",
                        "thumbnail": "file"
                    },
                    {
                        "brand": "BMW X12",
                        "description": "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Aliquam tempora aperiam sint sequi.",
                        "thumbnail": "file"
                    }
                ]
            },
            "CarUpdate": {
                "properties": {
                    "brand": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "thumbnail": {
                        "type": "file"
                    }
                },
                "type": "object",
                "example": {
                    "brand": "BMW X12",
                    "description": "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Aliquam tempora aperiam sint sequi.",
                    "thumbnail": "file"
                }
            },
            "CarDetailsUpdate": {
                "properties": {
                    "engine_capacity": {
                        "type": "string"
                    },
                    "horsePower": {
                        "type": "string"
                    },
                    "sits": {
                        "type": "string"
                    },
                    "doors": {
                        "type": "string"
                    },
                    "color": {
                        "type": "string"
                    },
                    "drivetrain": {
                        "type": "string"
                    },
                    "body": {
                        "type": "string"
                    },
                    "Fuel_Type": {
                        "type": "string"
                    },
                    "mileage": {
                        "type": "string"
                    }
                },
                "type": "object",
                "example": {
                    "engine_capacity": "2.0l",
                    "horse_power": "200hp",
                    "sits": "5",
                    "doors": "5",
                    "color": "silver",
                    "drivetrain": "FWD",
                    "body": "suv",
                    "Feul_Type": "petrol",
                    "mileage": "150000km"
                }
            },
            "CarStatusUpdate": {
                "properties": {
                    "brand": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "thumbnail": {
                        "type": "file"
                    },
                    "availability": {
                        "type": "string"
                    }
                },
                "type": "object",
                "example": {
                    "brand": "BMW X12",
                    "description": "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Aliquam tempora aperiam sint sequi.",
                    "thumbnail": "file",
                    "availability": "available"
                }
            },
            "Coordinates": {
                "properties": {
                    "longitude": {
                        "type": "numeric|required"
                    },
                    "latitude": {
                        "type": "numeric|required"
                    }
                },
                "type": "object",
                "example": {
                    "longitude": "+50.235423",
                    "latitude": "-15.152354"
                }
            },
            "UpdatePassword": {
                "properties": {
                    "password": {
                        "type": "string"
                    },
                    "password_confirmation": {
                        "type": "string"
                    }
                },
                "type": "object",
                "example": {
                    "password": "12345678",
                    "password_confirmation": "12345678"
                }
            },
            "UpdateEmail": {
                "properties": {
                    "email": {
                        "type": "email|string"
                    }
                },
                "type": "object",
                "example": {
                    "email": "test@test.com"
                }
            },
            "UpdateName": {
                "properties": {
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "example": {
                    "name": "JohnDoe"
                }
            },
            "Avatar": {
                "properties": {
                    "image": {
                        "type": "file"
                    }
                },
                "type": "object",
                "example": {
                    "image": "file"
                }
            },
            "RetrievedAvatar": {
                "properties": {
                    "image": {
                        "description": "Image is encoded in base64.",
                        "type": "string"
                    }
                },
                "type": "object",
                "example": {
                    "image": "iVBORw0KGgoAAAANSUhEUgAAAFEAAABRCAYAAACqj0o2AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAzElEQVR4nO3QgQkAIRDAsNP9d/4fwoIgyQSla2a+4ci+HfACEwMmBkwMmBgwMWBiwMSAiQETAyYGTAyYGDAxYGLAxICJARMDJgZMDJgYMDFgYsDEgIkBEwMmBkwMmBgwMWBiwMSAiQETAyYGTAyYGDAxYGLAxICJARMDJgZMDJgYMDFgYsDEgIkBEwMmBkwMmBgwMWBiwMSAiQETAyYGTAyYGDAxYGLAxICJARMDJgZMDJgYMDFgYsDEgIkBEwMmBkwMmBgwMWBiwMTAD2JSAaEhoH6NAAAAAElFTkSuQmCC"
                }
            },
            "Login": {
                "properties": {
                    "email": {
                        "type": "email|string"
                    },
                    "password": {
                        "type": "string"
                    }
                },
                "type": "object",
                "example": {
                    "email": "cool@email.com",
                    "password": "12345678"
                }
            },
            "Logout": {
                "properties": {
                    "Bearer NumerToken": {
                        "type": "string"
                    }
                },
                "type": "string",
                "example": "Bearer TokenNr1"
            },
            "Register": {
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "email": {
                        "type": "email|string"
                    },
                    "password": {
                        "type": "string"
                    },
                    "password_confirmation": {
                        "type": "string"
                    }
                },
                "type": "object",
                "example": {
                    "name": "JohnDoe",
                    "email": "cool@email.com",
                    "password": "12345678",
                    "password_confirmation": "12345678"
                }
            },
            "SendResetPasswordLink": {
                "properties": {
                    "email": {
                        "type": "email|string"
                    }
                },
                "type": "object",
                "example": {
                    "email": "cool@email.com"
                }
            },
            "ResetPassword": {
                "properties": {
                    "token": {
                        "type": "string"
                    },
                    "email": {
                        "type": "email|string"
                    },
                    "password": {
                        "type": "string"
                    },
                    "password_confirmation": {
                        "type": "string"
                    }
                },
                "type": "object",
                "example": {
                    "token": "cdacc0d252881102003fb486b419f2de52d8f7b1779585342e5b04c2003ce10d",
                    "email": "cool@email.com",
                    "password": "12345678",
                    "password_confirmation": "12345678"
                }
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "name": "bearerAuth",
                "in": "header",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "security": [
        []
    ]
}